package com.lycenway.chr.backbone.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.lycenway.chr.backbone.model.Binghai;
import com.lycenway.chr.backbone.model.BinghaiModel;
import com.lycenway.chr.backbone.model.BinghaiSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Binghai service. Represents a row in the &quot;base_binghai&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.lycenway.chr.backbone.model.BinghaiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BinghaiImpl}.
 * </p>
 *
 * @author lycenway
 * @see BinghaiImpl
 * @see com.lycenway.chr.backbone.model.Binghai
 * @see com.lycenway.chr.backbone.model.BinghaiModel
 * @generated
 */
@JSON(strict = true)
public class BinghaiModelImpl extends BaseModelImpl<Binghai>
    implements BinghaiModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a Binghai Case Weixiu Wenti model instance should use the {@link com.lycenway.chr.backbone.model.Binghai} interface instead.
     */
    public static final String TABLE_NAME = "base_binghai";
    public static final Object[][] TABLE_COLUMNS = {
            { "hkey", Types.VARCHAR },
            { "muTitle", Types.VARCHAR },
            { "buwei", Types.VARCHAR },
            { "tab", Types.VARCHAR },
            { "cName", Types.VARCHAR },
            { "cId", Types.INTEGER },
            { "c1Name", Types.VARCHAR },
            { "c1Id", Types.INTEGER },
            { "c2Name", Types.VARCHAR },
            { "c2Id", Types.INTEGER },
            { "binghaiLeixing", Types.VARCHAR },
            { "stageName", Types.VARCHAR },
            { "stageId", Types.INTEGER },
            { "koufen", Types.INTEGER },
            { "visitContent", Types.VARCHAR },
            { "visitedBy", Types.VARCHAR },
            { "visitedOn", Types.VARCHAR },
            { "revisitedBy", Types.VARCHAR },
            { "revisitedOn", Types.VARCHAR },
            { "binghaiShuzhi", Types.INTEGER },
            { "gongzuoliangAction", Types.VARCHAR },
            { "gongzuoliangName", Types.VARCHAR },
            { "gongzuoliangUnit", Types.VARCHAR },
            { "gongzuoliangTval", Types.VARCHAR },
            { "binghaiId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "proofCount", Types.BIGINT },
            { "referenceRadio", Types.VARCHAR },
            { "daochaJson", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table base_binghai (hkey VARCHAR(75) null,muTitle VARCHAR(75) null,buwei VARCHAR(75) null,tab VARCHAR(75) null,cName VARCHAR(75) null,cId INTEGER,c1Name VARCHAR(75) null,c1Id INTEGER,c2Name VARCHAR(75) null,c2Id INTEGER,binghaiLeixing VARCHAR(75) null,stageName VARCHAR(75) null,stageId INTEGER,koufen INTEGER,visitContent VARCHAR(75) null,visitedBy VARCHAR(75) null,visitedOn VARCHAR(75) null,revisitedBy VARCHAR(75) null,revisitedOn VARCHAR(75) null,binghaiShuzhi INTEGER,gongzuoliangAction VARCHAR(75) null,gongzuoliangName VARCHAR(75) null,gongzuoliangUnit VARCHAR(75) null,gongzuoliangTval VARCHAR(75) null,binghaiId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,proofCount LONG,referenceRadio VARCHAR(75) null,daochaJson VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table base_binghai";
    public static final String ORDER_BY_JPQL = " ORDER BY binghai.binghaiId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY base_binghai.binghaiId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.lycenway.chr.backbone.model.Binghai"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.lycenway.chr.backbone.model.Binghai"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.lycenway.chr.backbone.model.Binghai"),
            true);
    public static long BINGHAILEIXING_COLUMN_BITMASK = 1L;
    public static long GROUPID_COLUMN_BITMASK = 2L;
    public static long KOUFEN_COLUMN_BITMASK = 4L;
    public static long USERID_COLUMN_BITMASK = 8L;
    public static long VISITEDBY_COLUMN_BITMASK = 16L;
    public static long VISITEDON_COLUMN_BITMASK = 32L;
    public static long BINGHAIID_COLUMN_BITMASK = 64L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.lycenway.chr.backbone.model.Binghai"));
    private static ClassLoader _classLoader = Binghai.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Binghai.class
        };
    private String _hkey;
    private String _muTitle;
    private String _buwei;
    private String _tab;
    private String _cName;
    private int _cId;
    private String _c1Name;
    private int _c1Id;
    private String _c2Name;
    private int _c2Id;
    private String _binghaiLeixing;
    private String _originalBinghaiLeixing;
    private String _stageName;
    private int _stageId;
    private int _koufen;
    private int _originalKoufen;
    private boolean _setOriginalKoufen;
    private String _visitContent;
    private String _visitedBy;
    private String _originalVisitedBy;
    private String _visitedOn;
    private String _originalVisitedOn;
    private String _revisitedBy;
    private String _revisitedOn;
    private int _binghaiShuzhi;
    private String _gongzuoliangAction;
    private String _gongzuoliangName;
    private String _gongzuoliangUnit;
    private String _gongzuoliangTval;
    private long _binghaiId;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private long _originalUserId;
    private boolean _setOriginalUserId;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private long _proofCount;
    private String _referenceRadio;
    private String _daochaJson;
    private long _columnBitmask;
    private Binghai _escapedModel;

    public BinghaiModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Binghai toModel(BinghaiSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Binghai model = new BinghaiImpl();

        model.setHkey(soapModel.getHkey());
        model.setMuTitle(soapModel.getMuTitle());
        model.setBuwei(soapModel.getBuwei());
        model.setTab(soapModel.getTab());
        model.setCName(soapModel.getCName());
        model.setCId(soapModel.getCId());
        model.setC1Name(soapModel.getC1Name());
        model.setC1Id(soapModel.getC1Id());
        model.setC2Name(soapModel.getC2Name());
        model.setC2Id(soapModel.getC2Id());
        model.setBinghaiLeixing(soapModel.getBinghaiLeixing());
        model.setStageName(soapModel.getStageName());
        model.setStageId(soapModel.getStageId());
        model.setKoufen(soapModel.getKoufen());
        model.setVisitContent(soapModel.getVisitContent());
        model.setVisitedBy(soapModel.getVisitedBy());
        model.setVisitedOn(soapModel.getVisitedOn());
        model.setRevisitedBy(soapModel.getRevisitedBy());
        model.setRevisitedOn(soapModel.getRevisitedOn());
        model.setBinghaiShuzhi(soapModel.getBinghaiShuzhi());
        model.setGongzuoliangAction(soapModel.getGongzuoliangAction());
        model.setGongzuoliangName(soapModel.getGongzuoliangName());
        model.setGongzuoliangUnit(soapModel.getGongzuoliangUnit());
        model.setGongzuoliangTval(soapModel.getGongzuoliangTval());
        model.setBinghaiId(soapModel.getBinghaiId());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setUserName(soapModel.getUserName());
        model.setCreateDate(soapModel.getCreateDate());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setProofCount(soapModel.getProofCount());
        model.setReferenceRadio(soapModel.getReferenceRadio());
        model.setDaochaJson(soapModel.getDaochaJson());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Binghai> toModels(BinghaiSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Binghai> models = new ArrayList<Binghai>(soapModels.length);

        for (BinghaiSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _binghaiId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setBinghaiId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _binghaiId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Binghai.class;
    }

    @Override
    public String getModelClassName() {
        return Binghai.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("hkey", getHkey());
        attributes.put("muTitle", getMuTitle());
        attributes.put("buwei", getBuwei());
        attributes.put("tab", getTab());
        attributes.put("cName", getCName());
        attributes.put("cId", getCId());
        attributes.put("c1Name", getC1Name());
        attributes.put("c1Id", getC1Id());
        attributes.put("c2Name", getC2Name());
        attributes.put("c2Id", getC2Id());
        attributes.put("binghaiLeixing", getBinghaiLeixing());
        attributes.put("stageName", getStageName());
        attributes.put("stageId", getStageId());
        attributes.put("koufen", getKoufen());
        attributes.put("visitContent", getVisitContent());
        attributes.put("visitedBy", getVisitedBy());
        attributes.put("visitedOn", getVisitedOn());
        attributes.put("revisitedBy", getRevisitedBy());
        attributes.put("revisitedOn", getRevisitedOn());
        attributes.put("binghaiShuzhi", getBinghaiShuzhi());
        attributes.put("gongzuoliangAction", getGongzuoliangAction());
        attributes.put("gongzuoliangName", getGongzuoliangName());
        attributes.put("gongzuoliangUnit", getGongzuoliangUnit());
        attributes.put("gongzuoliangTval", getGongzuoliangTval());
        attributes.put("binghaiId", getBinghaiId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("proofCount", getProofCount());
        attributes.put("referenceRadio", getReferenceRadio());
        attributes.put("daochaJson", getDaochaJson());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String hkey = (String) attributes.get("hkey");

        if (hkey != null) {
            setHkey(hkey);
        }

        String muTitle = (String) attributes.get("muTitle");

        if (muTitle != null) {
            setMuTitle(muTitle);
        }

        String buwei = (String) attributes.get("buwei");

        if (buwei != null) {
            setBuwei(buwei);
        }

        String tab = (String) attributes.get("tab");

        if (tab != null) {
            setTab(tab);
        }

        String cName = (String) attributes.get("cName");

        if (cName != null) {
            setCName(cName);
        }

        Integer cId = (Integer) attributes.get("cId");

        if (cId != null) {
            setCId(cId);
        }

        String c1Name = (String) attributes.get("c1Name");

        if (c1Name != null) {
            setC1Name(c1Name);
        }

        Integer c1Id = (Integer) attributes.get("c1Id");

        if (c1Id != null) {
            setC1Id(c1Id);
        }

        String c2Name = (String) attributes.get("c2Name");

        if (c2Name != null) {
            setC2Name(c2Name);
        }

        Integer c2Id = (Integer) attributes.get("c2Id");

        if (c2Id != null) {
            setC2Id(c2Id);
        }

        String binghaiLeixing = (String) attributes.get("binghaiLeixing");

        if (binghaiLeixing != null) {
            setBinghaiLeixing(binghaiLeixing);
        }

        String stageName = (String) attributes.get("stageName");

        if (stageName != null) {
            setStageName(stageName);
        }

        Integer stageId = (Integer) attributes.get("stageId");

        if (stageId != null) {
            setStageId(stageId);
        }

        Integer koufen = (Integer) attributes.get("koufen");

        if (koufen != null) {
            setKoufen(koufen);
        }

        String visitContent = (String) attributes.get("visitContent");

        if (visitContent != null) {
            setVisitContent(visitContent);
        }

        String visitedBy = (String) attributes.get("visitedBy");

        if (visitedBy != null) {
            setVisitedBy(visitedBy);
        }

        String visitedOn = (String) attributes.get("visitedOn");

        if (visitedOn != null) {
            setVisitedOn(visitedOn);
        }

        String revisitedBy = (String) attributes.get("revisitedBy");

        if (revisitedBy != null) {
            setRevisitedBy(revisitedBy);
        }

        String revisitedOn = (String) attributes.get("revisitedOn");

        if (revisitedOn != null) {
            setRevisitedOn(revisitedOn);
        }

        Integer binghaiShuzhi = (Integer) attributes.get("binghaiShuzhi");

        if (binghaiShuzhi != null) {
            setBinghaiShuzhi(binghaiShuzhi);
        }

        String gongzuoliangAction = (String) attributes.get(
                "gongzuoliangAction");

        if (gongzuoliangAction != null) {
            setGongzuoliangAction(gongzuoliangAction);
        }

        String gongzuoliangName = (String) attributes.get("gongzuoliangName");

        if (gongzuoliangName != null) {
            setGongzuoliangName(gongzuoliangName);
        }

        String gongzuoliangUnit = (String) attributes.get("gongzuoliangUnit");

        if (gongzuoliangUnit != null) {
            setGongzuoliangUnit(gongzuoliangUnit);
        }

        String gongzuoliangTval = (String) attributes.get("gongzuoliangTval");

        if (gongzuoliangTval != null) {
            setGongzuoliangTval(gongzuoliangTval);
        }

        Long binghaiId = (Long) attributes.get("binghaiId");

        if (binghaiId != null) {
            setBinghaiId(binghaiId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Long proofCount = (Long) attributes.get("proofCount");

        if (proofCount != null) {
            setProofCount(proofCount);
        }

        String referenceRadio = (String) attributes.get("referenceRadio");

        if (referenceRadio != null) {
            setReferenceRadio(referenceRadio);
        }

        String daochaJson = (String) attributes.get("daochaJson");

        if (daochaJson != null) {
            setDaochaJson(daochaJson);
        }
    }

    @JSON
    @Override
    public String getHkey() {
        if (_hkey == null) {
            return StringPool.BLANK;
        } else {
            return _hkey;
        }
    }

    @Override
    public void setHkey(String hkey) {
        _hkey = hkey;
    }

    @JSON
    @Override
    public String getMuTitle() {
        if (_muTitle == null) {
            return StringPool.BLANK;
        } else {
            return _muTitle;
        }
    }

    @Override
    public void setMuTitle(String muTitle) {
        _muTitle = muTitle;
    }

    @JSON
    @Override
    public String getBuwei() {
        if (_buwei == null) {
            return StringPool.BLANK;
        } else {
            return _buwei;
        }
    }

    @Override
    public void setBuwei(String buwei) {
        _buwei = buwei;
    }

    @JSON
    @Override
    public String getTab() {
        if (_tab == null) {
            return StringPool.BLANK;
        } else {
            return _tab;
        }
    }

    @Override
    public void setTab(String tab) {
        _tab = tab;
    }

    @JSON
    @Override
    public String getCName() {
        if (_cName == null) {
            return StringPool.BLANK;
        } else {
            return _cName;
        }
    }

    @Override
    public void setCName(String cName) {
        _cName = cName;
    }

    @JSON
    @Override
    public int getCId() {
        return _cId;
    }

    @Override
    public void setCId(int cId) {
        _cId = cId;
    }

    @JSON
    @Override
    public String getC1Name() {
        if (_c1Name == null) {
            return StringPool.BLANK;
        } else {
            return _c1Name;
        }
    }

    @Override
    public void setC1Name(String c1Name) {
        _c1Name = c1Name;
    }

    @JSON
    @Override
    public int getC1Id() {
        return _c1Id;
    }

    @Override
    public void setC1Id(int c1Id) {
        _c1Id = c1Id;
    }

    @JSON
    @Override
    public String getC2Name() {
        if (_c2Name == null) {
            return StringPool.BLANK;
        } else {
            return _c2Name;
        }
    }

    @Override
    public void setC2Name(String c2Name) {
        _c2Name = c2Name;
    }

    @JSON
    @Override
    public int getC2Id() {
        return _c2Id;
    }

    @Override
    public void setC2Id(int c2Id) {
        _c2Id = c2Id;
    }

    @JSON
    @Override
    public String getBinghaiLeixing() {
        if (_binghaiLeixing == null) {
            return StringPool.BLANK;
        } else {
            return _binghaiLeixing;
        }
    }

    @Override
    public void setBinghaiLeixing(String binghaiLeixing) {
        _columnBitmask |= BINGHAILEIXING_COLUMN_BITMASK;

        if (_originalBinghaiLeixing == null) {
            _originalBinghaiLeixing = _binghaiLeixing;
        }

        _binghaiLeixing = binghaiLeixing;
    }

    public String getOriginalBinghaiLeixing() {
        return GetterUtil.getString(_originalBinghaiLeixing);
    }

    @JSON
    @Override
    public String getStageName() {
        if (_stageName == null) {
            return StringPool.BLANK;
        } else {
            return _stageName;
        }
    }

    @Override
    public void setStageName(String stageName) {
        _stageName = stageName;
    }

    @JSON
    @Override
    public int getStageId() {
        return _stageId;
    }

    @Override
    public void setStageId(int stageId) {
        _stageId = stageId;
    }

    @JSON
    @Override
    public int getKoufen() {
        return _koufen;
    }

    @Override
    public void setKoufen(int koufen) {
        _columnBitmask |= KOUFEN_COLUMN_BITMASK;

        if (!_setOriginalKoufen) {
            _setOriginalKoufen = true;

            _originalKoufen = _koufen;
        }

        _koufen = koufen;
    }

    public int getOriginalKoufen() {
        return _originalKoufen;
    }

    @JSON
    @Override
    public String getVisitContent() {
        if (_visitContent == null) {
            return StringPool.BLANK;
        } else {
            return _visitContent;
        }
    }

    @Override
    public void setVisitContent(String visitContent) {
        _visitContent = visitContent;
    }

    @JSON
    @Override
    public String getVisitedBy() {
        if (_visitedBy == null) {
            return StringPool.BLANK;
        } else {
            return _visitedBy;
        }
    }

    @Override
    public void setVisitedBy(String visitedBy) {
        _columnBitmask |= VISITEDBY_COLUMN_BITMASK;

        if (_originalVisitedBy == null) {
            _originalVisitedBy = _visitedBy;
        }

        _visitedBy = visitedBy;
    }

    public String getOriginalVisitedBy() {
        return GetterUtil.getString(_originalVisitedBy);
    }

    @JSON
    @Override
    public String getVisitedOn() {
        if (_visitedOn == null) {
            return StringPool.BLANK;
        } else {
            return _visitedOn;
        }
    }

    @Override
    public void setVisitedOn(String visitedOn) {
        _columnBitmask |= VISITEDON_COLUMN_BITMASK;

        if (_originalVisitedOn == null) {
            _originalVisitedOn = _visitedOn;
        }

        _visitedOn = visitedOn;
    }

    public String getOriginalVisitedOn() {
        return GetterUtil.getString(_originalVisitedOn);
    }

    @JSON
    @Override
    public String getRevisitedBy() {
        if (_revisitedBy == null) {
            return StringPool.BLANK;
        } else {
            return _revisitedBy;
        }
    }

    @Override
    public void setRevisitedBy(String revisitedBy) {
        _revisitedBy = revisitedBy;
    }

    @JSON
    @Override
    public String getRevisitedOn() {
        if (_revisitedOn == null) {
            return StringPool.BLANK;
        } else {
            return _revisitedOn;
        }
    }

    @Override
    public void setRevisitedOn(String revisitedOn) {
        _revisitedOn = revisitedOn;
    }

    @JSON
    @Override
    public int getBinghaiShuzhi() {
        return _binghaiShuzhi;
    }

    @Override
    public void setBinghaiShuzhi(int binghaiShuzhi) {
        _binghaiShuzhi = binghaiShuzhi;
    }

    @JSON
    @Override
    public String getGongzuoliangAction() {
        if (_gongzuoliangAction == null) {
            return StringPool.BLANK;
        } else {
            return _gongzuoliangAction;
        }
    }

    @Override
    public void setGongzuoliangAction(String gongzuoliangAction) {
        _gongzuoliangAction = gongzuoliangAction;
    }

    @JSON
    @Override
    public String getGongzuoliangName() {
        if (_gongzuoliangName == null) {
            return StringPool.BLANK;
        } else {
            return _gongzuoliangName;
        }
    }

    @Override
    public void setGongzuoliangName(String gongzuoliangName) {
        _gongzuoliangName = gongzuoliangName;
    }

    @JSON
    @Override
    public String getGongzuoliangUnit() {
        if (_gongzuoliangUnit == null) {
            return StringPool.BLANK;
        } else {
            return _gongzuoliangUnit;
        }
    }

    @Override
    public void setGongzuoliangUnit(String gongzuoliangUnit) {
        _gongzuoliangUnit = gongzuoliangUnit;
    }

    @JSON
    @Override
    public String getGongzuoliangTval() {
        if (_gongzuoliangTval == null) {
            return StringPool.BLANK;
        } else {
            return _gongzuoliangTval;
        }
    }

    @Override
    public void setGongzuoliangTval(String gongzuoliangTval) {
        _gongzuoliangTval = gongzuoliangTval;
    }

    @JSON
    @Override
    public long getBinghaiId() {
        return _binghaiId;
    }

    @Override
    public void setBinghaiId(long binghaiId) {
        _binghaiId = binghaiId;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    public long getOriginalUserId() {
        return _originalUserId;
    }

    @JSON
    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public long getProofCount() {
        return _proofCount;
    }

    @Override
    public void setProofCount(long proofCount) {
        _proofCount = proofCount;
    }

    @JSON
    @Override
    public String getReferenceRadio() {
        if (_referenceRadio == null) {
            return StringPool.BLANK;
        } else {
            return _referenceRadio;
        }
    }

    @Override
    public void setReferenceRadio(String referenceRadio) {
        _referenceRadio = referenceRadio;
    }

    @JSON
    @Override
    public String getDaochaJson() {
        if (_daochaJson == null) {
            return StringPool.BLANK;
        } else {
            return _daochaJson;
        }
    }

    @Override
    public void setDaochaJson(String daochaJson) {
        _daochaJson = daochaJson;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Binghai.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Binghai toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Binghai) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        BinghaiImpl binghaiImpl = new BinghaiImpl();

        binghaiImpl.setHkey(getHkey());
        binghaiImpl.setMuTitle(getMuTitle());
        binghaiImpl.setBuwei(getBuwei());
        binghaiImpl.setTab(getTab());
        binghaiImpl.setCName(getCName());
        binghaiImpl.setCId(getCId());
        binghaiImpl.setC1Name(getC1Name());
        binghaiImpl.setC1Id(getC1Id());
        binghaiImpl.setC2Name(getC2Name());
        binghaiImpl.setC2Id(getC2Id());
        binghaiImpl.setBinghaiLeixing(getBinghaiLeixing());
        binghaiImpl.setStageName(getStageName());
        binghaiImpl.setStageId(getStageId());
        binghaiImpl.setKoufen(getKoufen());
        binghaiImpl.setVisitContent(getVisitContent());
        binghaiImpl.setVisitedBy(getVisitedBy());
        binghaiImpl.setVisitedOn(getVisitedOn());
        binghaiImpl.setRevisitedBy(getRevisitedBy());
        binghaiImpl.setRevisitedOn(getRevisitedOn());
        binghaiImpl.setBinghaiShuzhi(getBinghaiShuzhi());
        binghaiImpl.setGongzuoliangAction(getGongzuoliangAction());
        binghaiImpl.setGongzuoliangName(getGongzuoliangName());
        binghaiImpl.setGongzuoliangUnit(getGongzuoliangUnit());
        binghaiImpl.setGongzuoliangTval(getGongzuoliangTval());
        binghaiImpl.setBinghaiId(getBinghaiId());
        binghaiImpl.setGroupId(getGroupId());
        binghaiImpl.setCompanyId(getCompanyId());
        binghaiImpl.setUserId(getUserId());
        binghaiImpl.setUserName(getUserName());
        binghaiImpl.setCreateDate(getCreateDate());
        binghaiImpl.setModifiedDate(getModifiedDate());
        binghaiImpl.setProofCount(getProofCount());
        binghaiImpl.setReferenceRadio(getReferenceRadio());
        binghaiImpl.setDaochaJson(getDaochaJson());

        binghaiImpl.resetOriginalValues();

        return binghaiImpl;
    }

    @Override
    public int compareTo(Binghai binghai) {
        long primaryKey = binghai.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Binghai)) {
            return false;
        }

        Binghai binghai = (Binghai) obj;

        long primaryKey = binghai.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        BinghaiModelImpl binghaiModelImpl = this;

        binghaiModelImpl._originalBinghaiLeixing = binghaiModelImpl._binghaiLeixing;

        binghaiModelImpl._originalKoufen = binghaiModelImpl._koufen;

        binghaiModelImpl._setOriginalKoufen = false;

        binghaiModelImpl._originalVisitedBy = binghaiModelImpl._visitedBy;

        binghaiModelImpl._originalVisitedOn = binghaiModelImpl._visitedOn;

        binghaiModelImpl._originalGroupId = binghaiModelImpl._groupId;

        binghaiModelImpl._setOriginalGroupId = false;

        binghaiModelImpl._originalUserId = binghaiModelImpl._userId;

        binghaiModelImpl._setOriginalUserId = false;

        binghaiModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Binghai> toCacheModel() {
        BinghaiCacheModel binghaiCacheModel = new BinghaiCacheModel();

        binghaiCacheModel.hkey = getHkey();

        String hkey = binghaiCacheModel.hkey;

        if ((hkey != null) && (hkey.length() == 0)) {
            binghaiCacheModel.hkey = null;
        }

        binghaiCacheModel.muTitle = getMuTitle();

        String muTitle = binghaiCacheModel.muTitle;

        if ((muTitle != null) && (muTitle.length() == 0)) {
            binghaiCacheModel.muTitle = null;
        }

        binghaiCacheModel.buwei = getBuwei();

        String buwei = binghaiCacheModel.buwei;

        if ((buwei != null) && (buwei.length() == 0)) {
            binghaiCacheModel.buwei = null;
        }

        binghaiCacheModel.tab = getTab();

        String tab = binghaiCacheModel.tab;

        if ((tab != null) && (tab.length() == 0)) {
            binghaiCacheModel.tab = null;
        }

        binghaiCacheModel.cName = getCName();

        String cName = binghaiCacheModel.cName;

        if ((cName != null) && (cName.length() == 0)) {
            binghaiCacheModel.cName = null;
        }

        binghaiCacheModel.cId = getCId();

        binghaiCacheModel.c1Name = getC1Name();

        String c1Name = binghaiCacheModel.c1Name;

        if ((c1Name != null) && (c1Name.length() == 0)) {
            binghaiCacheModel.c1Name = null;
        }

        binghaiCacheModel.c1Id = getC1Id();

        binghaiCacheModel.c2Name = getC2Name();

        String c2Name = binghaiCacheModel.c2Name;

        if ((c2Name != null) && (c2Name.length() == 0)) {
            binghaiCacheModel.c2Name = null;
        }

        binghaiCacheModel.c2Id = getC2Id();

        binghaiCacheModel.binghaiLeixing = getBinghaiLeixing();

        String binghaiLeixing = binghaiCacheModel.binghaiLeixing;

        if ((binghaiLeixing != null) && (binghaiLeixing.length() == 0)) {
            binghaiCacheModel.binghaiLeixing = null;
        }

        binghaiCacheModel.stageName = getStageName();

        String stageName = binghaiCacheModel.stageName;

        if ((stageName != null) && (stageName.length() == 0)) {
            binghaiCacheModel.stageName = null;
        }

        binghaiCacheModel.stageId = getStageId();

        binghaiCacheModel.koufen = getKoufen();

        binghaiCacheModel.visitContent = getVisitContent();

        String visitContent = binghaiCacheModel.visitContent;

        if ((visitContent != null) && (visitContent.length() == 0)) {
            binghaiCacheModel.visitContent = null;
        }

        binghaiCacheModel.visitedBy = getVisitedBy();

        String visitedBy = binghaiCacheModel.visitedBy;

        if ((visitedBy != null) && (visitedBy.length() == 0)) {
            binghaiCacheModel.visitedBy = null;
        }

        binghaiCacheModel.visitedOn = getVisitedOn();

        String visitedOn = binghaiCacheModel.visitedOn;

        if ((visitedOn != null) && (visitedOn.length() == 0)) {
            binghaiCacheModel.visitedOn = null;
        }

        binghaiCacheModel.revisitedBy = getRevisitedBy();

        String revisitedBy = binghaiCacheModel.revisitedBy;

        if ((revisitedBy != null) && (revisitedBy.length() == 0)) {
            binghaiCacheModel.revisitedBy = null;
        }

        binghaiCacheModel.revisitedOn = getRevisitedOn();

        String revisitedOn = binghaiCacheModel.revisitedOn;

        if ((revisitedOn != null) && (revisitedOn.length() == 0)) {
            binghaiCacheModel.revisitedOn = null;
        }

        binghaiCacheModel.binghaiShuzhi = getBinghaiShuzhi();

        binghaiCacheModel.gongzuoliangAction = getGongzuoliangAction();

        String gongzuoliangAction = binghaiCacheModel.gongzuoliangAction;

        if ((gongzuoliangAction != null) && (gongzuoliangAction.length() == 0)) {
            binghaiCacheModel.gongzuoliangAction = null;
        }

        binghaiCacheModel.gongzuoliangName = getGongzuoliangName();

        String gongzuoliangName = binghaiCacheModel.gongzuoliangName;

        if ((gongzuoliangName != null) && (gongzuoliangName.length() == 0)) {
            binghaiCacheModel.gongzuoliangName = null;
        }

        binghaiCacheModel.gongzuoliangUnit = getGongzuoliangUnit();

        String gongzuoliangUnit = binghaiCacheModel.gongzuoliangUnit;

        if ((gongzuoliangUnit != null) && (gongzuoliangUnit.length() == 0)) {
            binghaiCacheModel.gongzuoliangUnit = null;
        }

        binghaiCacheModel.gongzuoliangTval = getGongzuoliangTval();

        String gongzuoliangTval = binghaiCacheModel.gongzuoliangTval;

        if ((gongzuoliangTval != null) && (gongzuoliangTval.length() == 0)) {
            binghaiCacheModel.gongzuoliangTval = null;
        }

        binghaiCacheModel.binghaiId = getBinghaiId();

        binghaiCacheModel.groupId = getGroupId();

        binghaiCacheModel.companyId = getCompanyId();

        binghaiCacheModel.userId = getUserId();

        binghaiCacheModel.userName = getUserName();

        String userName = binghaiCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            binghaiCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            binghaiCacheModel.createDate = createDate.getTime();
        } else {
            binghaiCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            binghaiCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            binghaiCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        binghaiCacheModel.proofCount = getProofCount();

        binghaiCacheModel.referenceRadio = getReferenceRadio();

        String referenceRadio = binghaiCacheModel.referenceRadio;

        if ((referenceRadio != null) && (referenceRadio.length() == 0)) {
            binghaiCacheModel.referenceRadio = null;
        }

        binghaiCacheModel.daochaJson = getDaochaJson();

        String daochaJson = binghaiCacheModel.daochaJson;

        if ((daochaJson != null) && (daochaJson.length() == 0)) {
            binghaiCacheModel.daochaJson = null;
        }

        return binghaiCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(69);

        sb.append("{hkey=");
        sb.append(getHkey());
        sb.append(", muTitle=");
        sb.append(getMuTitle());
        sb.append(", buwei=");
        sb.append(getBuwei());
        sb.append(", tab=");
        sb.append(getTab());
        sb.append(", cName=");
        sb.append(getCName());
        sb.append(", cId=");
        sb.append(getCId());
        sb.append(", c1Name=");
        sb.append(getC1Name());
        sb.append(", c1Id=");
        sb.append(getC1Id());
        sb.append(", c2Name=");
        sb.append(getC2Name());
        sb.append(", c2Id=");
        sb.append(getC2Id());
        sb.append(", binghaiLeixing=");
        sb.append(getBinghaiLeixing());
        sb.append(", stageName=");
        sb.append(getStageName());
        sb.append(", stageId=");
        sb.append(getStageId());
        sb.append(", koufen=");
        sb.append(getKoufen());
        sb.append(", visitContent=");
        sb.append(getVisitContent());
        sb.append(", visitedBy=");
        sb.append(getVisitedBy());
        sb.append(", visitedOn=");
        sb.append(getVisitedOn());
        sb.append(", revisitedBy=");
        sb.append(getRevisitedBy());
        sb.append(", revisitedOn=");
        sb.append(getRevisitedOn());
        sb.append(", binghaiShuzhi=");
        sb.append(getBinghaiShuzhi());
        sb.append(", gongzuoliangAction=");
        sb.append(getGongzuoliangAction());
        sb.append(", gongzuoliangName=");
        sb.append(getGongzuoliangName());
        sb.append(", gongzuoliangUnit=");
        sb.append(getGongzuoliangUnit());
        sb.append(", gongzuoliangTval=");
        sb.append(getGongzuoliangTval());
        sb.append(", binghaiId=");
        sb.append(getBinghaiId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", proofCount=");
        sb.append(getProofCount());
        sb.append(", referenceRadio=");
        sb.append(getReferenceRadio());
        sb.append(", daochaJson=");
        sb.append(getDaochaJson());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(106);

        sb.append("<model><model-name>");
        sb.append("com.lycenway.chr.backbone.model.Binghai");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>hkey</column-name><column-value><![CDATA[");
        sb.append(getHkey());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muTitle</column-name><column-value><![CDATA[");
        sb.append(getMuTitle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>buwei</column-name><column-value><![CDATA[");
        sb.append(getBuwei());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tab</column-name><column-value><![CDATA[");
        sb.append(getTab());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cName</column-name><column-value><![CDATA[");
        sb.append(getCName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cId</column-name><column-value><![CDATA[");
        sb.append(getCId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>c1Name</column-name><column-value><![CDATA[");
        sb.append(getC1Name());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>c1Id</column-name><column-value><![CDATA[");
        sb.append(getC1Id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>c2Name</column-name><column-value><![CDATA[");
        sb.append(getC2Name());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>c2Id</column-name><column-value><![CDATA[");
        sb.append(getC2Id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>binghaiLeixing</column-name><column-value><![CDATA[");
        sb.append(getBinghaiLeixing());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>stageName</column-name><column-value><![CDATA[");
        sb.append(getStageName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>stageId</column-name><column-value><![CDATA[");
        sb.append(getStageId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>koufen</column-name><column-value><![CDATA[");
        sb.append(getKoufen());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>visitContent</column-name><column-value><![CDATA[");
        sb.append(getVisitContent());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>visitedBy</column-name><column-value><![CDATA[");
        sb.append(getVisitedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>visitedOn</column-name><column-value><![CDATA[");
        sb.append(getVisitedOn());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>revisitedBy</column-name><column-value><![CDATA[");
        sb.append(getRevisitedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>revisitedOn</column-name><column-value><![CDATA[");
        sb.append(getRevisitedOn());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>binghaiShuzhi</column-name><column-value><![CDATA[");
        sb.append(getBinghaiShuzhi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gongzuoliangAction</column-name><column-value><![CDATA[");
        sb.append(getGongzuoliangAction());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gongzuoliangName</column-name><column-value><![CDATA[");
        sb.append(getGongzuoliangName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gongzuoliangUnit</column-name><column-value><![CDATA[");
        sb.append(getGongzuoliangUnit());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gongzuoliangTval</column-name><column-value><![CDATA[");
        sb.append(getGongzuoliangTval());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>binghaiId</column-name><column-value><![CDATA[");
        sb.append(getBinghaiId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>proofCount</column-name><column-value><![CDATA[");
        sb.append(getProofCount());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>referenceRadio</column-name><column-value><![CDATA[");
        sb.append(getReferenceRadio());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>daochaJson</column-name><column-value><![CDATA[");
        sb.append(getDaochaJson());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
