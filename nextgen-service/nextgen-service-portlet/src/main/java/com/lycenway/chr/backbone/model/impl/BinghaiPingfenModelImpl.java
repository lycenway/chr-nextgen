package com.lycenway.chr.backbone.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.lycenway.chr.backbone.model.BinghaiPingfen;
import com.lycenway.chr.backbone.model.BinghaiPingfenModel;
import com.lycenway.chr.backbone.model.BinghaiPingfenSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BinghaiPingfen service. Represents a row in the &quot;lov_binghai_pingfen&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.lycenway.chr.backbone.model.BinghaiPingfenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BinghaiPingfenImpl}.
 * </p>
 *
 * @author lycenway
 * @see BinghaiPingfenImpl
 * @see com.lycenway.chr.backbone.model.BinghaiPingfen
 * @see com.lycenway.chr.backbone.model.BinghaiPingfenModel
 * @generated
 */
@JSON(strict = true)
public class BinghaiPingfenModelImpl extends BaseModelImpl<BinghaiPingfen>
    implements BinghaiPingfenModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a binghai pingfen model instance should use the {@link com.lycenway.chr.backbone.model.BinghaiPingfen} interface instead.
     */
    public static final String TABLE_NAME = "lov_binghai_pingfen";
    public static final Object[][] TABLE_COLUMNS = {
            { "binghaiPingfenId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "dalei", Types.VARCHAR },
            { "vmin", Types.DOUBLE },
            { "vmax", Types.DOUBLE },
            { "xiangmu", Types.VARCHAR },
            { "dengji", Types.VARCHAR },
            { "dengji_min", Types.DOUBLE },
            { "dengji_max", Types.DOUBLE }
        };
    public static final String TABLE_SQL_CREATE = "create table lov_binghai_pingfen (binghaiPingfenId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dalei VARCHAR(75) null,vmin DOUBLE,vmax DOUBLE,xiangmu VARCHAR(75) null,dengji VARCHAR(75) null,dengji_min DOUBLE,dengji_max DOUBLE)";
    public static final String TABLE_SQL_DROP = "drop table lov_binghai_pingfen";
    public static final String ORDER_BY_JPQL = " ORDER BY binghaiPingfen.binghaiPingfenId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY lov_binghai_pingfen.binghaiPingfenId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.lycenway.chr.backbone.model.BinghaiPingfen"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.lycenway.chr.backbone.model.BinghaiPingfen"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.lycenway.chr.backbone.model.BinghaiPingfen"),
            true);
    public static long DALEI_COLUMN_BITMASK = 1L;
    public static long DENGJI_MAX_COLUMN_BITMASK = 2L;
    public static long DENGJI_MIN_COLUMN_BITMASK = 4L;
    public static long VMAX_COLUMN_BITMASK = 8L;
    public static long VMIN_COLUMN_BITMASK = 16L;
    public static long XIANGMU_COLUMN_BITMASK = 32L;
    public static long BINGHAIPINGFENID_COLUMN_BITMASK = 64L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.lycenway.chr.backbone.model.BinghaiPingfen"));
    private static ClassLoader _classLoader = BinghaiPingfen.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            BinghaiPingfen.class
        };
    private long _binghaiPingfenId;
    private long _groupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private String _dalei;
    private String _originalDalei;
    private double _vmin;
    private double _originalVmin;
    private boolean _setOriginalVmin;
    private double _vmax;
    private double _originalVmax;
    private boolean _setOriginalVmax;
    private String _xiangmu;
    private String _originalXiangmu;
    private String _dengji;
    private double _dengji_min;
    private double _originalDengji_min;
    private boolean _setOriginalDengji_min;
    private double _dengji_max;
    private double _originalDengji_max;
    private boolean _setOriginalDengji_max;
    private long _columnBitmask;
    private BinghaiPingfen _escapedModel;

    public BinghaiPingfenModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static BinghaiPingfen toModel(BinghaiPingfenSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        BinghaiPingfen model = new BinghaiPingfenImpl();

        model.setBinghaiPingfenId(soapModel.getBinghaiPingfenId());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setUserName(soapModel.getUserName());
        model.setCreateDate(soapModel.getCreateDate());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setDalei(soapModel.getDalei());
        model.setVmin(soapModel.getVmin());
        model.setVmax(soapModel.getVmax());
        model.setXiangmu(soapModel.getXiangmu());
        model.setDengji(soapModel.getDengji());
        model.setDengji_min(soapModel.getDengji_min());
        model.setDengji_max(soapModel.getDengji_max());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<BinghaiPingfen> toModels(BinghaiPingfenSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<BinghaiPingfen> models = new ArrayList<BinghaiPingfen>(soapModels.length);

        for (BinghaiPingfenSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _binghaiPingfenId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setBinghaiPingfenId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _binghaiPingfenId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return BinghaiPingfen.class;
    }

    @Override
    public String getModelClassName() {
        return BinghaiPingfen.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("binghaiPingfenId", getBinghaiPingfenId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("dalei", getDalei());
        attributes.put("vmin", getVmin());
        attributes.put("vmax", getVmax());
        attributes.put("xiangmu", getXiangmu());
        attributes.put("dengji", getDengji());
        attributes.put("dengji_min", getDengji_min());
        attributes.put("dengji_max", getDengji_max());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long binghaiPingfenId = (Long) attributes.get("binghaiPingfenId");

        if (binghaiPingfenId != null) {
            setBinghaiPingfenId(binghaiPingfenId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String dalei = (String) attributes.get("dalei");

        if (dalei != null) {
            setDalei(dalei);
        }

        Double vmin = (Double) attributes.get("vmin");

        if (vmin != null) {
            setVmin(vmin);
        }

        Double vmax = (Double) attributes.get("vmax");

        if (vmax != null) {
            setVmax(vmax);
        }

        String xiangmu = (String) attributes.get("xiangmu");

        if (xiangmu != null) {
            setXiangmu(xiangmu);
        }

        String dengji = (String) attributes.get("dengji");

        if (dengji != null) {
            setDengji(dengji);
        }

        Double dengji_min = (Double) attributes.get("dengji_min");

        if (dengji_min != null) {
            setDengji_min(dengji_min);
        }

        Double dengji_max = (Double) attributes.get("dengji_max");

        if (dengji_max != null) {
            setDengji_max(dengji_max);
        }
    }

    @JSON
    @Override
    public long getBinghaiPingfenId() {
        return _binghaiPingfenId;
    }

    @Override
    public void setBinghaiPingfenId(long binghaiPingfenId) {
        _binghaiPingfenId = binghaiPingfenId;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public String getDalei() {
        if (_dalei == null) {
            return StringPool.BLANK;
        } else {
            return _dalei;
        }
    }

    @Override
    public void setDalei(String dalei) {
        _columnBitmask |= DALEI_COLUMN_BITMASK;

        if (_originalDalei == null) {
            _originalDalei = _dalei;
        }

        _dalei = dalei;
    }

    public String getOriginalDalei() {
        return GetterUtil.getString(_originalDalei);
    }

    @JSON
    @Override
    public double getVmin() {
        return _vmin;
    }

    @Override
    public void setVmin(double vmin) {
        _columnBitmask |= VMIN_COLUMN_BITMASK;

        if (!_setOriginalVmin) {
            _setOriginalVmin = true;

            _originalVmin = _vmin;
        }

        _vmin = vmin;
    }

    public double getOriginalVmin() {
        return _originalVmin;
    }

    @JSON
    @Override
    public double getVmax() {
        return _vmax;
    }

    @Override
    public void setVmax(double vmax) {
        _columnBitmask |= VMAX_COLUMN_BITMASK;

        if (!_setOriginalVmax) {
            _setOriginalVmax = true;

            _originalVmax = _vmax;
        }

        _vmax = vmax;
    }

    public double getOriginalVmax() {
        return _originalVmax;
    }

    @JSON
    @Override
    public String getXiangmu() {
        if (_xiangmu == null) {
            return StringPool.BLANK;
        } else {
            return _xiangmu;
        }
    }

    @Override
    public void setXiangmu(String xiangmu) {
        _columnBitmask |= XIANGMU_COLUMN_BITMASK;

        if (_originalXiangmu == null) {
            _originalXiangmu = _xiangmu;
        }

        _xiangmu = xiangmu;
    }

    public String getOriginalXiangmu() {
        return GetterUtil.getString(_originalXiangmu);
    }

    @JSON
    @Override
    public String getDengji() {
        if (_dengji == null) {
            return StringPool.BLANK;
        } else {
            return _dengji;
        }
    }

    @Override
    public void setDengji(String dengji) {
        _dengji = dengji;
    }

    @JSON
    @Override
    public double getDengji_min() {
        return _dengji_min;
    }

    @Override
    public void setDengji_min(double dengji_min) {
        _columnBitmask |= DENGJI_MIN_COLUMN_BITMASK;

        if (!_setOriginalDengji_min) {
            _setOriginalDengji_min = true;

            _originalDengji_min = _dengji_min;
        }

        _dengji_min = dengji_min;
    }

    public double getOriginalDengji_min() {
        return _originalDengji_min;
    }

    @JSON
    @Override
    public double getDengji_max() {
        return _dengji_max;
    }

    @Override
    public void setDengji_max(double dengji_max) {
        _columnBitmask |= DENGJI_MAX_COLUMN_BITMASK;

        if (!_setOriginalDengji_max) {
            _setOriginalDengji_max = true;

            _originalDengji_max = _dengji_max;
        }

        _dengji_max = dengji_max;
    }

    public double getOriginalDengji_max() {
        return _originalDengji_max;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            BinghaiPingfen.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public BinghaiPingfen toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (BinghaiPingfen) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        BinghaiPingfenImpl binghaiPingfenImpl = new BinghaiPingfenImpl();

        binghaiPingfenImpl.setBinghaiPingfenId(getBinghaiPingfenId());
        binghaiPingfenImpl.setGroupId(getGroupId());
        binghaiPingfenImpl.setCompanyId(getCompanyId());
        binghaiPingfenImpl.setUserId(getUserId());
        binghaiPingfenImpl.setUserName(getUserName());
        binghaiPingfenImpl.setCreateDate(getCreateDate());
        binghaiPingfenImpl.setModifiedDate(getModifiedDate());
        binghaiPingfenImpl.setDalei(getDalei());
        binghaiPingfenImpl.setVmin(getVmin());
        binghaiPingfenImpl.setVmax(getVmax());
        binghaiPingfenImpl.setXiangmu(getXiangmu());
        binghaiPingfenImpl.setDengji(getDengji());
        binghaiPingfenImpl.setDengji_min(getDengji_min());
        binghaiPingfenImpl.setDengji_max(getDengji_max());

        binghaiPingfenImpl.resetOriginalValues();

        return binghaiPingfenImpl;
    }

    @Override
    public int compareTo(BinghaiPingfen binghaiPingfen) {
        long primaryKey = binghaiPingfen.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof BinghaiPingfen)) {
            return false;
        }

        BinghaiPingfen binghaiPingfen = (BinghaiPingfen) obj;

        long primaryKey = binghaiPingfen.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        BinghaiPingfenModelImpl binghaiPingfenModelImpl = this;

        binghaiPingfenModelImpl._originalDalei = binghaiPingfenModelImpl._dalei;

        binghaiPingfenModelImpl._originalVmin = binghaiPingfenModelImpl._vmin;

        binghaiPingfenModelImpl._setOriginalVmin = false;

        binghaiPingfenModelImpl._originalVmax = binghaiPingfenModelImpl._vmax;

        binghaiPingfenModelImpl._setOriginalVmax = false;

        binghaiPingfenModelImpl._originalXiangmu = binghaiPingfenModelImpl._xiangmu;

        binghaiPingfenModelImpl._originalDengji_min = binghaiPingfenModelImpl._dengji_min;

        binghaiPingfenModelImpl._setOriginalDengji_min = false;

        binghaiPingfenModelImpl._originalDengji_max = binghaiPingfenModelImpl._dengji_max;

        binghaiPingfenModelImpl._setOriginalDengji_max = false;

        binghaiPingfenModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<BinghaiPingfen> toCacheModel() {
        BinghaiPingfenCacheModel binghaiPingfenCacheModel = new BinghaiPingfenCacheModel();

        binghaiPingfenCacheModel.binghaiPingfenId = getBinghaiPingfenId();

        binghaiPingfenCacheModel.groupId = getGroupId();

        binghaiPingfenCacheModel.companyId = getCompanyId();

        binghaiPingfenCacheModel.userId = getUserId();

        binghaiPingfenCacheModel.userName = getUserName();

        String userName = binghaiPingfenCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            binghaiPingfenCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            binghaiPingfenCacheModel.createDate = createDate.getTime();
        } else {
            binghaiPingfenCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            binghaiPingfenCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            binghaiPingfenCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        binghaiPingfenCacheModel.dalei = getDalei();

        String dalei = binghaiPingfenCacheModel.dalei;

        if ((dalei != null) && (dalei.length() == 0)) {
            binghaiPingfenCacheModel.dalei = null;
        }

        binghaiPingfenCacheModel.vmin = getVmin();

        binghaiPingfenCacheModel.vmax = getVmax();

        binghaiPingfenCacheModel.xiangmu = getXiangmu();

        String xiangmu = binghaiPingfenCacheModel.xiangmu;

        if ((xiangmu != null) && (xiangmu.length() == 0)) {
            binghaiPingfenCacheModel.xiangmu = null;
        }

        binghaiPingfenCacheModel.dengji = getDengji();

        String dengji = binghaiPingfenCacheModel.dengji;

        if ((dengji != null) && (dengji.length() == 0)) {
            binghaiPingfenCacheModel.dengji = null;
        }

        binghaiPingfenCacheModel.dengji_min = getDengji_min();

        binghaiPingfenCacheModel.dengji_max = getDengji_max();

        return binghaiPingfenCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(29);

        sb.append("{binghaiPingfenId=");
        sb.append(getBinghaiPingfenId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", dalei=");
        sb.append(getDalei());
        sb.append(", vmin=");
        sb.append(getVmin());
        sb.append(", vmax=");
        sb.append(getVmax());
        sb.append(", xiangmu=");
        sb.append(getXiangmu());
        sb.append(", dengji=");
        sb.append(getDengji());
        sb.append(", dengji_min=");
        sb.append(getDengji_min());
        sb.append(", dengji_max=");
        sb.append(getDengji_max());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(46);

        sb.append("<model><model-name>");
        sb.append("com.lycenway.chr.backbone.model.BinghaiPingfen");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>binghaiPingfenId</column-name><column-value><![CDATA[");
        sb.append(getBinghaiPingfenId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>dalei</column-name><column-value><![CDATA[");
        sb.append(getDalei());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>vmin</column-name><column-value><![CDATA[");
        sb.append(getVmin());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>vmax</column-name><column-value><![CDATA[");
        sb.append(getVmax());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>xiangmu</column-name><column-value><![CDATA[");
        sb.append(getXiangmu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>dengji</column-name><column-value><![CDATA[");
        sb.append(getDengji());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>dengji_min</column-name><column-value><![CDATA[");
        sb.append(getDengji_min());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>dengji_max</column-name><column-value><![CDATA[");
        sb.append(getDengji_max());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
